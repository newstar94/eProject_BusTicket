@model PagedList.IPagedList<eProject_BusTicket.ViewModels.TripSVM>
@using PagedList.Mvc
@{
    Layout = null;
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TripSchedule.Trip.CodeName))
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TripSchedule.DepartureTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TripSchedule.Trip.Origin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TripSchedule.Trip.Destination)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TripSchedule.Trip.Vehicle.TypeofVehicle.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TripSchedule.Trip.Vehicle.Code)
        </th>
        <th>
            Distance
        </th>
        <th>
            Time
        </th>
        <th>
            Pick up points
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr id="row_@item.TripSchedule.TripScheduleID">
            <td>
                @Html.DisplayFor(modelItem => item.TripSchedule.Trip.CodeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TripSchedule.DepartureTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TripSchedule.Trip.Origin)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TripSchedule.Trip.Destination)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TripSchedule.Trip.Vehicle.TypeofVehicle.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TripSchedule.Trip.Vehicle.Code)
            </td>
            <td>
                @item.TripSchedule.Trip.Routes.Max(r => r.Distance) km
            </td>
            <td>
                @if (item.Stations.Count > 2)
                {
                    <span>
                        @(item.TripSchedule.Trip.Routes.Max(r => r.Duration) + (item.Stations.Count - 2) * 7) mins
                    </span>
                }
                else
                {
                    <span>
                        @(@item.TripSchedule.Trip.Routes.Max(r => r.Duration)) mins
                    </span>
                }
            </td>
            <td>
                @item.Stations.Count()
            </td>
            <td>
                @Html.ActionLink("Details", "Details", "TripSchedules", new { id = item.TripSchedule.TripScheduleID }, new { @class = "btn btn-info", @style = "margin-right: 10px " })
                @{
                    var check = true;
                    foreach (var route in item.RouteSchedules)
                    {
                        if (route.AvaiableSeat < route.Route.Trip.Vehicle.Seats)
                        {
                            check = false;
                            break;
                        }

                    }
                    if (check)
                    {
                        @Ajax.ActionLink("Delete", "Delete", "TripSchedules", new { id = item.TripSchedule.TripScheduleID }, new AjaxOptions
                        {
                            Confirm = "Are you sure to delete " + @item.TripSchedule.TripScheduleCode + "?",
                            OnComplete = "$('#row_" + @item.TripSchedule.TripScheduleID + "').remove()",
                            HttpMethod = "Post"
                        }, new { @class = "btn btn-danger" })
                    }
                }
            </td>
        </tr>
    }
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", "TripSchedules", new
{
    page,
    Origin= ViewBag.Origin,
    Destination=ViewBag.Destination,
    dateTime= ViewBag.DateTime
}),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
    { HttpMethod = "Post", UpdateTargetId = "partialView" }))